{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dc1b7c7324f066366386","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoAccessToken.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoIdToken.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoRefreshToken.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoTokenScopes.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/index.js","webpack:///external {\"root\":[\"AWSCognito\"],\"commonjs2\":\"aws-sdk/global\",\"commonjs\":\"aws-sdk/global\",\"amd\":\"aws-sdk/global\"}","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoAuthSession.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/StorageHelper.js","webpack:///./e:/code-source/amazon-cognito-auth-js/enhance.js","webpack:///external {\"root\":[\"AWSCognito\",\"CognitoIdentityServiceProvider\"],\"commonjs2\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"commonjs\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"amd\":\"aws-sdk/clients/cognitoidentityserviceprovider\"}","webpack:///./e:/code-source/amazon-cognito-auth-js/src/CognitoAuth.js","webpack:///./e:/code-source/amazon-cognito-auth-js/src/DateHelper.js"],"names":["CognitoAccessToken","constructor","AccessToken","jwtToken","getJwtToken","setJwtToken","accessToken","getExpiration","payload","split","expiration","JSON","parse","util","base64","decode","toString","exp","getUsername","undefined","usernameSource","username","CognitoIdToken","IdToken","idToken","CognitoRefreshToken","RefreshToken","refreshToken","getToken","setToken","CognitoTokenScopes","TokenScopesArray","tokenScopes","getScopes","setTokenScopes","CognitoAuthSession","TokenScopes","getIdToken","setIdToken","getRefreshToken","setRefreshToken","getAccessToken","setAccessToken","getTokenScopes","isValid","now","Math","floor","Date","e","dataMemory","MemoryStorage","setItem","key","value","getItem","Object","prototype","hasOwnProperty","call","removeItem","clear","StorageHelper","storageWindow","window","localStorage","exception","getStorage","keys","forEach","CognitoIdentityServiceProvider","enhancements","crypto","msCrypto","CognitoAuth","data","ClientId","AppWebDomain","RedirectUriSignIn","RedirectUriSignOut","Error","getCognitoConstants","PARAMETERERROR","clientId","appWebDomain","Array","isArray","SCOPETYPEERROR","signInUserSession","responseType","TOKEN","storage","getLastUser","authEventListenerAttached","attachAuthEventListener","addEventListener","event","location","authWindowRef","close","parseCognitoWebResponse","CognitoConstants","DOMAIN_SCHEME","DOMAIN_PATH_SIGNIN","DOMAIN_PATH_SIGNOUT","DOMAIN_QUERY_PARAM_REDIRECT_URI","DOMAIN_QUERY_PARAM_SIGNOUT_URI","DOMAIN_QUERY_PARAM_RESPONSE_TYPE","CLIENT_ID","STATE","SCOPE","CODE","POST","QUESTIONMARK","POUNDSIGN","COLONDOUBLESLASH","SLASH","AMPERSAND","EQUALSIGN","SPACE","CONTENTTYPE","CONTENTTYPEVALUE","AUTHORIZATIONCODE","IDTOKEN","ACCESSTOKEN","REFRESHTOKEN","ERROR","STRINGTYPE","STATELENGTH","STATEORIGINSTRING","WITHCREDENTIALS","UNDEFINED","SELF","HOSTNAMEREGEX","HASHPARAMETERREGEX","QUERYPARAMETERREGEX1","QUERYPARAMETERREGEX2","HEADER","getClientId","getAppWebDomain","getCurrentUser","lastUserKey","lastAuthUser","setUser","Username","useCodeGrantFlow","useImplicitFlow","getSignInUserSession","setUsername","getSession","nonInteractive","URL","getFQDNSignIn","userhandler","onSuccess","getCachedSession","tokenScopesInputSet","Set","cachedScopesSet","compareSets","launchUri","refreshSession","getExistingSession","httpRequestResponse","indexOf","getCodeQueryParameter","getTokenQueryParameter","mapSecond","Map","getQueryParameters","has","codeParameter","getCodeParameter","url","concat","header","body","grant_type","client_id","redirect_uri","code","boundOnSuccess","onSuccessExchangeForToken","bind","boundOnFailure","onFailure","makePOSTRequest","map","get","cacheTokensScopes","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","scopeKey","scopesString","scopesArray","sessionData","cachedSession","lastUserName","tokenUserName","join","set1","set2","size","item","getHostName","match","length","regex","str","String","url2","str1","num","i","set","urlEdit","url1","urlStr","generateRandomString","chars","result","round","random","clearCachedTokensScopes","refresh_token","onSuccessRefreshToken","xhr","createCORSRequest","bodyString","j","setRequestHeader","substring","send","onreadystatechange","addressState","readyState","jsonData","responseText","status","onload","onerror","method","XMLHttpRequest","open","XDomainRequest","err","jsonDataObject","id_token","access_token","getSpaceSeperatedScopeString","tokenScopesString","encodeURIComponent","state","uri","signOut","getFQDNSignOut","monthNames","weekNames","DateHelper","getNowString","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow"],"mappings":"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","file":"amazon-cognito-auth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws-sdk/global\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"aws-sdk/global\", \"aws-sdk/clients/cognitoidentityserviceprovider\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory(require(\"aws-sdk/global\"), require(\"aws-sdk/clients/cognitoidentityserviceprovider\"));\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory(root[\"AWSCognito\"], root[\"AWSCognito\"][\"CognitoIdentityServiceProvider\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc1b7c7324f066366386","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { util } from 'aws-sdk/global';\r\n\r\n/** @class */\r\nexport default class CognitoAccessToken {\r\n  /**\r\n   * Constructs a new CognitoAccessToken object\r\n   * @param {string=} AccessToken The JWT access token.\r\n   */\r\n  constructor(AccessToken) {\r\n    // Assign object\r\n    this.jwtToken = AccessToken || '';\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getJwtToken() {\r\n    return this.jwtToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for access token.\r\n   * @param {string=} accessToken The JWT access token.\r\n   * @returns {void}\r\n   */\r\n  setJwtToken(accessToken) {\r\n    this.jwtToken = accessToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {int} the token's expiration (exp member).\r\n   */\r\n  getExpiration() {\r\n    const payload = this.jwtToken.split('.')[1];\r\n    const expiration = JSON.parse(util.base64.decode(payload).toString('utf8'));\r\n    return expiration.exp;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the username from payload.\r\n   */\r\n  getUsername() {\r\n    if (this.jwtToken === null) {\r\n      return undefined;\r\n    }\r\n    const payload = this.jwtToken.split('.')[1];\r\n    const usernameSource = JSON.parse(util.base64.decode(payload).toString('utf8'));\r\n    return usernameSource.username;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoAccessToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { util } from 'aws-sdk/global';\r\n\r\n/** @class */\r\nexport default class CognitoIdToken {\r\n  /**\r\n   * Constructs a new CognitoIdToken object\r\n   * @param {string=} IdToken The JWT Id token\r\n   */\r\n  constructor(IdToken) {\r\n    // Assign object\r\n    this.jwtToken = IdToken || '';\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getJwtToken() {\r\n    return this.jwtToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for id token.\r\n   * @param {string=} idToken The JWT Id token\r\n   * @returns {void}\r\n   */\r\n  setJwtToken(idToken) {\r\n    this.jwtToken = idToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {int} the token's expiration (exp member).\r\n   */\r\n  getExpiration() {\r\n    const payload = this.jwtToken.split('.')[1];\r\n    const expiration = JSON.parse(util.base64.decode(payload).toString('utf8'));\r\n    return expiration.exp;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoIdToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\n/** @class */\r\nexport default class CognitoRefreshToken {\r\n  /**\r\n   * Constructs a new CognitoRefreshToken object\r\n   * @param {string=} RefreshToken The JWT refresh token.\r\n   */\r\n  constructor(RefreshToken) {\r\n    // Assign object\r\n    this.refreshToken = RefreshToken || '';\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the record's token.\r\n   */\r\n  getToken() {\r\n    return this.refreshToken;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for refresh token.\r\n   * @param {string=} refreshToken The JWT refresh token.\r\n   * @returns {void}\r\n   */\r\n  setToken(refreshToken) {\r\n    this.refreshToken = refreshToken;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoRefreshToken.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\n/** @class */\r\nexport default class CognitoTokenScopes {\r\n  /**\r\n   * Constructs a new CognitoTokenScopes object\r\n   * @param {array=} TokenScopesArray The token scopes\r\n   */\r\n  constructor(TokenScopesArray) {\r\n    // Assign object\r\n    this.tokenScopes = TokenScopesArray || [];\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} the token scopes.\r\n   */\r\n  getScopes() {\r\n    return this.tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * Sets new value for token scopes.\r\n   * @param {array=} tokenScopes The token scopes\r\n   * @returns {void}\r\n   */\r\n  setTokenScopes(tokenScopes) {\r\n    this.tokenScopes = tokenScopes;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoTokenScopes.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\r\nexport { default as CognitoIdToken } from './CognitoIdToken';\r\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\r\nexport { default as CognitoTokenScopes } from './CognitoTokenScopes';\r\nexport { default as CognitoAuth } from './CognitoAuth';\r\nexport { default as CognitoAuthSession } from './CognitoAuthSession';\r\nexport { default as DateHelper } from './DateHelper';\r\nexport { default as StorageHelper } from './StorageHelper';\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"AWSCognito\"],\"commonjs2\":\"aws-sdk/global\",\"commonjs\":\"aws-sdk/global\",\"amd\":\"aws-sdk/global\"}\n// module id = 5\n// module chunks = 0","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport CognitoTokenScopes from './CognitoTokenScopes';\r\nimport CognitoAccessToken from './CognitoAccessToken';\r\nimport CognitoIdToken from './CognitoIdToken';\r\nimport CognitoRefreshToken from './CognitoRefreshToken';\r\n\r\n/** @class */\r\nexport default class CognitoAuthSession {\r\n\t/**\r\n\t * Constructs a new CognitoUserSession object\r\n\t * @param {CognitoIdToken} IdToken The session's Id token.\r\n\t * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n\t * @param {CognitoAccessToken} AccessToken The session's access token.\r\n\t * @param {array}  TokenScopes  The session's token scopes.\r\n\t */\r\n  constructor({ IdToken, RefreshToken, AccessToken, TokenScopes } = {}) {\r\n    if (IdToken) {\r\n      this.idToken = IdToken;\r\n    } else {\r\n      this.idToken = new CognitoIdToken();\r\n    }\r\n    if (RefreshToken) {\r\n      this.refreshToken = RefreshToken;\r\n    } else {\r\n      this.refreshToken = new CognitoRefreshToken();\r\n    }\r\n    if (AccessToken) {\r\n      this.accessToken = AccessToken;\r\n    } else {\r\n      this.accessToken = new CognitoAccessToken();\r\n    }\r\n    if (TokenScopes) {\r\n      this.tokenScopes = TokenScopes;\r\n    } else {\r\n      this.tokenScopes = new CognitoTokenScopes();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoIdToken} the session's Id token\r\n   */\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Id token\r\n   * @param {CognitoIdToken} IdToken The session's Id token.\r\n   * @returns {void}\r\n   */\r\n  setIdToken(IdToken) {\r\n    this.idToken = IdToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoRefreshToken} the session's refresh token\r\n   */\r\n  getRefreshToken() {\r\n    return this.refreshToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Refresh token\r\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\r\n   * @returns {void}\r\n   */\r\n  setRefreshToken(RefreshToken) {\r\n    this.refreshToken = RefreshToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoAccessToken} the session's access token\r\n   */\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  /**\r\n   * Set a new Access token\r\n   * @param {CognitoAccessToken} AccessToken The session's access token.\r\n   * @returns {void}\r\n   */\r\n  setAccessToken(AccessToken) {\r\n    this.accessToken = AccessToken;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoTokenScopes} the session's token scopes\r\n   */\r\n  getTokenScopes() {\r\n    return this.tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * Set new token scopes\r\n   * @param {array}  tokenScopes  The session's token scopes.\r\n   * @returns {void}\r\n   */\r\n  setTokenScopes(tokenScopes) {\r\n    this.tokenScopes = tokenScopes;\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the session is still valid based on session expiry information found\r\n   * in Access and Id Tokens and the current time\r\n   * @returns {boolean} if the session is still valid\r\n   */\r\n  isValid() {\r\n    const now = Math.floor(new Date() / 1000);\r\n    try {\r\n      if (this.accessToken != null) {\r\n        return now < this.accessToken.getExpiration();\r\n      }\r\n      if (this.idToken != null) {\r\n        return now < this.idToken.getExpiration();\r\n      }\r\n      return false;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoAuthSession.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nlet dataMemory = {};\r\n\r\n/** @class */\r\nclass MemoryStorage {\r\n\r\n  /**\r\n   * This is used to set a specific item in storage\r\n   * @param {string} key - the key for the item\r\n   * @param {object} value - the value\r\n   * @returns {string} value that was set\r\n   */\r\n  static setItem(key, value) {\r\n    dataMemory[key] = value;\r\n    return dataMemory[key];\r\n  }\r\n\r\n  /**\r\n   * This is used to get a specific key from storage\r\n   * @param {string} key - the key for the item\r\n   * This is used to clear the storage\r\n   * @returns {string} the data item\r\n   */\r\n  static getItem(key) {\r\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\r\n  }\r\n\r\n  /**\r\n   * This is used to remove an item from storage\r\n   * @param {string} key - the key being set\r\n   * @returns {string} value - value that was deleted\r\n   */\r\n  static removeItem(key) {\r\n    return delete dataMemory[key];\r\n  }\r\n\r\n  /**\r\n   * This is used to clear the storage\r\n   * @returns {string} nothing\r\n   */\r\n  static clear() {\r\n    dataMemory = {};\r\n    return dataMemory;\r\n  }\r\n}\r\n\r\n/** @class */\r\nexport default class StorageHelper {\r\n\r\n  /**\r\n   * This is used to get a storage object\r\n   * @returns {object} the storage\r\n   */\r\n  constructor() {\r\n    try {\r\n      this.storageWindow = window.localStorage;\r\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\r\n      this.storageWindow.removeItem('aws.cognito.test-ls');\r\n    } catch (exception) {\r\n      this.storageWindow = MemoryStorage;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is used to return the storage\r\n   * @returns {object} the storage\r\n   */\r\n  getStorage() {\r\n    return this.storageWindow;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/StorageHelper.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport CognitoIdentityServiceProvider from 'aws-sdk/clients/cognitoidentityserviceprovider';\r\nimport * as enhancements from './src';\r\n\r\nexport * from './src';\r\n\r\nObject.keys(enhancements).forEach(key => {\r\n  CognitoIdentityServiceProvider[key] = enhancements[key];\r\n});\r\n\r\n// The version of crypto-browserify included by aws-sdk only\r\n// checks for window.crypto, not window.msCrypto as used by\r\n// IE 11 – so we set it explicitly here\r\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\r\n  window.crypto = window.msCrypto;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/enhance.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"AWSCognito\",\"CognitoIdentityServiceProvider\"],\"commonjs2\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"commonjs\":\"aws-sdk/clients/cognitoidentityserviceprovider\",\"amd\":\"aws-sdk/clients/cognitoidentityserviceprovider\"}\n// module id = 9\n// module chunks = 0","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport CognitoTokenScopes from './CognitoTokenScopes';\r\nimport CognitoAccessToken from './CognitoAccessToken';\r\nimport CognitoIdToken from './CognitoIdToken';\r\nimport CognitoRefreshToken from './CognitoRefreshToken';\r\nimport CognitoAuthSession from './CognitoAuthSession';\r\nimport StorageHelper from './StorageHelper';\r\n\r\n/** @class */\r\nexport default class CognitoAuth {\r\n\t/**\r\n\t * Constructs a new CognitoAuth object\r\n\t * @param {object} data Creation options\r\n\t * @param {string} data.ClientId Required: User pool application client id.\r\n\t * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\r\n\t *                     this is set at the Cognito console.\r\n\t * @param {array} data.TokenScopesArray Optional: The token scopes\r\n\t * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\r\n\t * which will be launched after authentication as signed in.\r\n\t * @param {string} data.RedirectUriSignOut Required:\r\n\t * The redirect Uri, which will be launched when signed out.\r\n\t * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\r\n\t */\r\n  constructor(data) {\r\n    const { ClientId, AppWebDomain, TokenScopesArray,\r\n    RedirectUriSignIn, RedirectUriSignOut } = data || { };\r\n    if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\r\n      throw new Error(this.getCognitoConstants().PARAMETERERROR);\r\n    }\r\n\r\n    this.clientId = ClientId;\r\n    this.appWebDomain = AppWebDomain;\r\n    this.TokenScopesArray = TokenScopesArray || [];\r\n    if (!Array.isArray(TokenScopesArray)) {\r\n      throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\r\n    }\r\n    const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\r\n    this.RedirectUriSignIn = RedirectUriSignIn;\r\n    this.RedirectUriSignOut = RedirectUriSignOut;\r\n    this.signInUserSession = new CognitoAuthSession();\r\n    this.responseType = this.getCognitoConstants().TOKEN;\r\n    this.storage = new StorageHelper().getStorage();\r\n    this.signInUserSession.setTokenScopes(tokenScopes);\r\n    this.username = this.getLastUser();\r\n\tthis.authEventListenerAttached = false;\r\n\tthis.attachAuthEventListener();\r\n  }\r\n\r\n  /**\r\n   * Attaches window message listener to handle auth flow\r\n   */\r\n  attachAuthEventListener() {\r\n\tif (!this.authEventListenerAttached) {\r\n\t\tthis.authEventListenerAttached = true;\r\n\t\twindow.addEventListener('message', event => {\r\n\t\t\tif (event.data.location) {\r\n\t\t\t\tif (this.authWindowRef && this.authWindowRef.close) this.authWindowRef.close();\r\n\t\t\t\tthis.parseCognitoWebResponse(event.data.location);\r\n\t\t\t}\r\n\t\t}, false);\r\n\t}\r\n  }\r\n\r\n  /**\r\n   * @returns {JSON} the constants\r\n   */\r\n  getCognitoConstants() {\r\n    const CognitoConstants = {\r\n      DOMAIN_SCHEME: 'https',\r\n      DOMAIN_PATH_SIGNIN: 'authorize',\r\n      DOMAIN_PATH_SIGNOUT: 'logout',\r\n      DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\r\n      DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\r\n      DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\r\n      CLIENT_ID: 'client_id',\r\n      STATE: 'state',\r\n      SCOPE: 'scope',\r\n      TOKEN: 'token',\r\n      CODE: 'code',\r\n      POST: 'POST',\r\n      PARAMETERERROR: 'The parameters: App client Id, App web domain' +\r\n                      ', the redirect URL when you are signed in and the ' + \r\n\t              'redirect URL when you are signed out are required.',\r\n      SCOPETYPEERROR: 'Scopes have to be array type. ',\r\n      QUESTIONMARK: '?',\r\n      POUNDSIGN: '#',\r\n      COLONDOUBLESLASH: '://',\r\n      SLASH: '/',\r\n      AMPERSAND: '&',\r\n      EQUALSIGN: '=',\r\n      SPACE: ' ',\r\n      CONTENTTYPE: 'Content-Type',\r\n      CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\r\n      AUTHORIZATIONCODE: 'authorization_code',\r\n      IDTOKEN: 'id_token',\r\n      ACCESSTOKEN: 'access_token',\r\n      REFRESHTOKEN: 'refresh_token',\r\n      ERROR: 'error',\r\n      STRINGTYPE: 'string',\r\n      STATELENGTH: 32,\r\n      STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n      WITHCREDENTIALS: 'withCredentials',\r\n      UNDEFINED: 'undefined',\r\n      SELF: '_self',\r\n      HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\r\n      HASHPARAMETERREGEX: /#(.+)/,\r\n      QUERYPARAMETERREGEX1: /[?](.+)/,\r\n      QUERYPARAMETERREGEX2: /=(.+)/,\r\n      HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n    };\r\n    return CognitoConstants;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the client id\r\n   */\r\n  getClientId() {\r\n    return this.clientId;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the app web domain\r\n   */\r\n  getAppWebDomain() {\r\n    return this.appWebDomain;\r\n  }\r\n\r\n  /**\r\n   * method for getting the current user of the application from the local storage\r\n   *\r\n   * @returns {CognitoAuth} the user retrieved from storage\r\n   */\r\n  getCurrentUser() {\r\n    const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\r\n\r\n    const lastAuthUser = this.storage.getItem(lastUserKey);\r\n    return lastAuthUser;\r\n  }\r\n\r\n  /**\r\n   * @param {string} Username the user's name\r\n   * method for setting the current user's name\r\n   * @returns {void}\r\n   */\r\n  setUser(Username) {\r\n    this.username = Username;\r\n  }\r\n\r\n  /**\r\n   * sets response type to 'code'\r\n   * @returns {void}\r\n   */\r\n  useCodeGrantFlow() {\r\n    this.responseType = this.getCognitoConstants().CODE;\r\n  }\r\n\r\n  /**\r\n   * sets response type to 'token'\r\n   * @returns {void}\r\n   */\r\n  useImplicitFlow() {\r\n    this.responseType = this.getCognitoConstants().TOKEN;\r\n  }\r\n\r\n  /**\r\n   * @returns {CognitoAuthSession} the current session for this user\r\n   */\r\n  getSignInUserSession() {\r\n    return this.signInUserSession;\r\n  }\r\n\r\n  /**\r\n   * @returns {string} the user's username\r\n   */\r\n  getUsername() {\r\n    return this.username;\r\n  }\r\n\r\n  /**\r\n   * @param {string} Username the user's username\r\n   * @returns {void}\r\n   */\r\n  setUsername(Username) {\r\n    this.username = Username;\r\n  }\r\n\r\n  /**\r\n   * This is used to get a session, either from the session object\r\n   * or from the local storage, or by using a refresh token\r\n   * @param {boolean} nonInteractive When truthy, only attempts to login\r\n   * through non-interactive means: cached session or valid refresh token available.\r\n   * @param {string} RedirectUriSignIn Required: The redirect Uri,\r\n   * which will be launched after authentication.\r\n   * @param {array} TokenScopesArray Required: The token scopes, it is an\r\n   * array of strings specifying all scopes for the tokens.\r\n   * @returns {void}\r\n   */\r\n  getSession(nonInteractive) {\r\n    const URL = this.getFQDNSignIn();\r\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\r\n      return this.userhandler.onSuccess(this.signInUserSession);\r\n    }\r\n    this.signInUserSession = this.getCachedSession();\r\n\r\n    const tokenScopesInputSet = new Set(this.TokenScopesArray);\r\n    const cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\r\n\r\n    // compare scopes\r\n    if (!nonInteractive && !this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\r\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\r\n      const idToken = new CognitoIdToken();\r\n      const accessToken = new CognitoAccessToken();\r\n      const refreshToken = new CognitoRefreshToken();\r\n      this.signInUserSession.setTokenScopes(tokenScopes);\r\n      this.signInUserSession.setIdToken(idToken);\r\n      this.signInUserSession.setAccessToken(accessToken);\r\n      this.signInUserSession.setRefreshToken(refreshToken);\r\n      this.launchUri(URL);\r\n    } else if (this.signInUserSession.isValid()) {\r\n      return this.userhandler.onSuccess(this.signInUserSession);\r\n    } else if (this.signInUserSession.getRefreshToken()\r\n    && this.signInUserSession.getRefreshToken().getToken()) {\r\n      this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\r\n    } else if (!nonInteractive) {\r\n      this.launchUri(URL);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Gets session when cached in local storage.\r\n   */\r\n  getExistingSession() {\r\n\t  return this.getSession(true);\r\n  }\r\n\r\n  /**\r\n   * @param {string} httpRequestResponse the http request response\r\n   * @returns {void}\r\n   * Parse the http request response and proceed according to different response types.\r\n   */\r\n  parseCognitoWebResponse(httpRequestResponse) {\r\n    if (httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) {\r\n      this.getCodeQueryParameter(httpRequestResponse);\r\n    } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) {\r\n      // To parse the response to get tokens\r\n      this.getTokenQueryParameter(httpRequestResponse);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} httpRequestResponse the http request response\r\n   * @returns {void}\r\n   * Parse the http request response and proceed according to code response type.\r\n   */\r\n  getCodeQueryParameter(httpRequestResponse) {\r\n    let mapSecond = new Map();\r\n    mapSecond = this.getQueryParameters(httpRequestResponse, mapSecond, this.getCognitoConstants().QUERYPARAMETERREGEX1);\r\n    if (mapSecond.has(this.getCognitoConstants().CODE)) {\r\n      // if the response contains code\r\n      // To parse the response and get the code value.\r\n      const codeParameter = this.getCodeParameter(httpRequestResponse);\r\n      const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().TOKEN);\r\n      const header = this.getCognitoConstants().HEADER;\r\n      const body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\r\n        client_id: this.getClientId(),\r\n        redirect_uri: this.RedirectUriSignIn,\r\n        code: codeParameter };\r\n      const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\r\n      const boundOnFailure = (this.onFailure).bind(this);\r\n      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse the http request response and proceed according to token response type.\r\n   * @param {string} httpRequestResponse the http request response\r\n   * @returns {void}\r\n   */\r\n  getTokenQueryParameter(httpRequestResponse) {\r\n    let map = new Map();\r\n    map = this.getQueryParameters(httpRequestResponse, map, this.getCognitoConstants().HASHPARAMETERREGEX);\r\n    const idToken = new CognitoIdToken();\r\n    const accessToken = new CognitoAccessToken();\r\n    const refreshToken = new CognitoRefreshToken();\r\n    if (httpRequestResponse.indexOf(this.getCognitoConstants().IDTOKEN) > -1) {\r\n      idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\r\n      this.signInUserSession.setIdToken(idToken);\r\n    } else {\r\n      this.signInUserSession.setIdToken(idToken);\r\n    }\r\n    if (httpRequestResponse.indexOf(this.getCognitoConstants().ACCESSTOKEN) > -1) {\r\n      accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\r\n      this.signInUserSession.setAccessToken(accessToken);\r\n    } else {\r\n      this.signInUserSession.setAccessToken(accessToken);\r\n    }\r\n    if (httpRequestResponse.indexOf(this.getCognitoConstants().REFRESHTOKEN) > -1) {\r\n      refreshToken.setToken(map.get(this.getCognitoConstants().REFRESHTOKEN));\r\n      this.signInUserSession.setRefreshToken(refreshToken);\r\n    } else {\r\n      this.signInUserSession.setRefreshToken(refreshToken);\r\n    }\r\n    this.cacheTokensScopes();\r\n    return this.userhandler.onSuccess(this.signInUserSession);\r\n  }\r\n\r\n  /**\r\n   * Get cached tokens and scopes and return a new session using all the cached data.\r\n   * @returns {CognitoAuthSession} the auth session\r\n   */\r\n  getCachedSession() {\r\n    if (!this.username) {\r\n      return new CognitoAuthSession();\r\n    }\r\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}.${this.username}`;\r\n    const idTokenKey = `${keyPrefix}.idToken`;\r\n    const accessTokenKey = `${keyPrefix}.accessToken`;\r\n    const refreshTokenKey = `${keyPrefix}.refreshToken`;\r\n    const scopeKey = `${keyPrefix}.tokenScopesString`;\r\n\r\n    const scopesString = this.storage.getItem(scopeKey);\r\n    let scopesArray = [];\r\n    if (scopesString) {\r\n      scopesArray = scopesString.split(' ');\r\n    }\r\n    const tokenScopes = new CognitoTokenScopes(scopesArray);\r\n    const idToken = new CognitoIdToken(this.storage.getItem(idTokenKey));\r\n    const accessToken = new CognitoAccessToken(this.storage.getItem(accessTokenKey));\r\n    const refreshToken = new CognitoRefreshToken(this.storage.getItem(refreshTokenKey));\r\n\r\n    const sessionData = {\r\n      IdToken: idToken,\r\n      AccessToken: accessToken,\r\n      RefreshToken: refreshToken,\r\n      TokenScopes: tokenScopes,\r\n    };\r\n    const cachedSession = new CognitoAuthSession(sessionData);\r\n    return cachedSession;\r\n  }\r\n\r\n  /**\r\n   * This is used to get last signed in user from local storage\r\n   * @returns {string} the last user name\r\n   */\r\n  getLastUser() {\r\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n    const lastUserName = this.storage.getItem(lastUserKey);\r\n    if (lastUserName) {\r\n      return lastUserName;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * This is used to save the session tokens, scope and state to local storage\r\n   * Input parameter is a set of strings.\r\n   * @returns {void}\r\n   */\r\n  cacheTokensScopes() {\r\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n    const tokenUserName = this.signInUserSession.getAccessToken().getUsername();\r\n    const idTokenKey = `${keyPrefix}.${tokenUserName}.idToken`;\r\n    const accessTokenKey = `${keyPrefix}.${tokenUserName}.accessToken`;\r\n    const refreshTokenKey = `${keyPrefix}.${tokenUserName}.refreshToken`;\r\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n    const scopeKey = `${keyPrefix}.${tokenUserName}.tokenScopesString`;\r\n    const scopesArray = this.signInUserSession.getTokenScopes().getScopes();\r\n    const scopesString = scopesArray.join(' ');\r\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\r\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\r\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\r\n    this.storage.setItem(lastUserKey, tokenUserName);\r\n    this.storage.setItem(scopeKey, scopesString);\r\n  }\r\n\r\n  /**\r\n   * Compare two sets if they are identical.\r\n   * @param {set} set1 one set\r\n   * @param {set} set2 the other set\r\n   * @returns {boolean} boolean value is true if two sets are identical\r\n   */\r\n  compareSets(set1, set2) {\r\n    if (set1.size !== set2.size) {\r\n      return false;\r\n    }\r\n    for (const item of set1) {\r\n      if (!set2.has(item)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {string} url the url string\r\n   * Get the hostname from url.\r\n   * @returns {string} hostname string\r\n   */\r\n  getHostName(url) {\r\n    const match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\r\n    if (match != null && match.length > 2 && typeof match[2] ===\r\n    this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\r\n      return match[2];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Get http query parameters and store them into a map.\r\n   * @param {string} url the url string\r\n   * @param {map} map the query parameter map\r\n   * @returns {map} map\r\n   */\r\n  getQueryParameters(url, map, regex) {\r\n    const str = String(url).split(regex);\r\n    const url2 = str[1];\r\n    const str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\r\n    const num = str1.length;\r\n    let i;\r\n    for (i = 0; i < num; i++) {\r\n      str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\r\n      map.set(str1[i][0], str1[i][1]);\r\n    }\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Get the code parameter from the url.\r\n   * @param {string} url the url string\r\n   * @returns {string} code\r\n   */\r\n  getCodeParameter(url) {\r\n    const urlEdit = String(url).split(this.getCognitoConstants().QUESTIONMARK);\r\n    const url1 = urlEdit[1];\r\n    const urlStr = String(url1).split(this.getCognitoConstants().EQUALSIGN);\r\n    const code = urlStr[1];\r\n    return code;\r\n  }\r\n\r\n  /**\r\n   * helper function to generate a random string\r\n   * @param {int} length the length of string\r\n   * @param {string} chars a original string\r\n   * @returns {string} a random value.\r\n   */\r\n  generateRandomString(length, chars) {\r\n    let result = '';\r\n    let i = length;\r\n    for (; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * This is used to clear the session tokens, scopes and state from local storage\r\n   * @returns {void}\r\n   */\r\n  clearCachedTokensScopes() {\r\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\r\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\r\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\r\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\r\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\r\n    const scopeKey = `${keyPrefix}.${this.username}.tokenScopesString`;\r\n\r\n    this.storage.removeItem(idTokenKey);\r\n    this.storage.removeItem(accessTokenKey);\r\n    this.storage.removeItem(refreshTokenKey);\r\n    this.storage.removeItem(lastUserKey);\r\n    this.storage.removeItem(scopeKey);\r\n  }\r\n\r\n  /**\r\n   * This is used to build a user session from tokens retrieved in the authentication result\r\n   * @param {object} refreshToken authResult Successful auth response from server.\r\n   * @returns {void}\r\n   */\r\n  refreshSession(refreshToken) {\r\n    // https POST call for refreshing token\r\n    const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n    this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n    this.getCognitoConstants().SLASH, this.getCognitoConstants().TOKEN);\r\n    const header = this.getCognitoConstants().HEADER;\r\n    const body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\r\n      client_id: this.getClientId(),\r\n      redirect_uri: this.RedirectUriSignIn,\r\n      refresh_token: refreshToken };\r\n    const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\r\n    const boundOnFailure = (this.onFailure).bind(this);\r\n    this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\r\n  }\r\n\r\n  /**\r\n   * Make the http POST request.\r\n   * @param {JSON} header header JSON object\r\n   * @param {JSON} body body JSON object\r\n   * @param {string} url string\r\n   * @param {function} onSuccess callback\r\n   * @param {function} onFailure callback\r\n   * @returns {void}\r\n   */\r\n  makePOSTRequest(header, body, url, onSuccess, onFailure) {\r\n    // This is a sample server that supports CORS.\r\n    const xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\r\n    let bodyString = '';\r\n\r\n    if (!xhr) {\r\n      return;\r\n    }\r\n    // set header\r\n\tif (header.length) {\r\n\t\tfor (let j = 0; j < header.length; j++) {\r\n\t\t\txhr.setRequestHeader(j, header[j]);\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let key in header) {\r\n\t\t\tif (header.hasOwnProperty && !header.hasOwnProperty(key)) continue;\r\n\t\t\txhr.setRequestHeader(key, header[key]);\r\n\t\t}\r\n\t}\r\n\t// set body\r\n\tif (body.length) {\r\n\t\tfor (let i = 0; i < body.length; i++) {\r\n\t\t\tbodyString = bodyString.concat(i, this.getCognitoConstants().EQUALSIGN, body[i], this.getCognitoConstants().AMPERSAND);\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let key in body) {\r\n\t\t\tif (body.hasOwnProperty && !body.hasOwnProperty(key)) continue;\r\n\t\t\tbodyString = bodyString.concat(key, this.getCognitoConstants().EQUALSIGN, body[key], this.getCognitoConstants().AMPERSAND);\r\n\t\t}\r\n\t}\r\n\r\n    bodyString = bodyString.substring(0, bodyString.length - 1);\r\n    xhr.send(bodyString);\r\n    xhr.onreadystatechange = function addressState() {\r\n      if (xhr.readyState === 4) {\r\n\t\tconst jsonData = xhr.responseText;\r\n        if (xhr.status === 200) {\r\n          xhr.onload = onSuccess(jsonData);\r\n        } else {\r\n          xhr.onerror = onFailure(jsonData);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create the XHR object\r\n   * @param {string} method which method to call\r\n   * @param {string} url the url string\r\n   * @returns {object} xhr\r\n   */\r\n  createCORSRequest(method, url) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open(method, url, true);\r\n    if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\r\n      // XHR for Chrome/Firefox/Opera/Safari.\r\n      xhr.open(method, url, true);\r\n    } else if (typeof XDomainRequest !== this.getCognitoConstants().UNDEFINED) {\r\n      // XDomainRequest for IE.\r\n      xhr = new XDomainRequest();\r\n      xhr.open(method, url);\r\n    } else {\r\n      // CORS not supported.\r\n      xhr = null;\r\n    }\r\n    return xhr;\r\n  }\r\n\r\n  /**\r\n   * The http POST request onFailure callback.\r\n   * @param {object} err the error object\r\n   * @returns {function} onFailure\r\n   */\r\n  onFailure(err) {\r\n    this.userhandler.onFailure(err);\r\n  }\r\n\r\n  /**\r\n   * The http POST request onSuccess callback when refreshing tokens.\r\n   * @param {JSON} jsonData tokens\r\n   * @returns {function} onSuccess\r\n   */\r\n  onSuccessRefreshToken(jsonData) {\r\n    const jsonDataObject = JSON.parse(jsonData);\r\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n    this.getCognitoConstants().ERROR)) {\r\n      const URL = this.getFQDNSignIn();\r\n      this.launchUri(URL);\r\n    } else {\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().IDTOKEN)) {\r\n        this.signInUserSession.setIdToken(new\r\n        CognitoIdToken(jsonDataObject.id_token));\r\n      }\r\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n      this.getCognitoConstants().ACCESSTOKEN)) {\r\n        this.signInUserSession.setAccessToken(new\r\n        CognitoAccessToken(jsonDataObject.access_token));\r\n      }\r\n      this.cacheTokensScopes();\r\n      return this.userhandler.onSuccess(this.signInUserSession);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * The http POST request onSuccess callback when exchanging code for tokens.\r\n   * @param {JSON} jsonData tokens\r\n   * @returns {function} onSuccess\r\n   */\r\n  onSuccessExchangeForToken(jsonData) {\r\n    const jsonDataObject = JSON.parse(jsonData);\r\n    const refreshToken = new CognitoRefreshToken();\r\n    const accessToken = new CognitoAccessToken();\r\n    const idToken = new CognitoIdToken();\r\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n    this.getCognitoConstants().ERROR)) {\r\n      return this.userhandler.onFailure(jsonData);\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n    this.getCognitoConstants().IDTOKEN)) {\r\n      this.signInUserSession.setIdToken(\r\n      new CognitoIdToken(jsonDataObject.id_token));\r\n    } else {\r\n      this.signInUserSession.setIdToken(idToken);\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n    this.getCognitoConstants().ACCESSTOKEN)) {\r\n      this.signInUserSession.setAccessToken(new\r\n      CognitoAccessToken(jsonDataObject.access_token));\r\n    } else {\r\n      this.signInUserSession.setAccessToken(accessToken);\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\r\n    this.getCognitoConstants().REFRESHTOKEN)) {\r\n      this.signInUserSession.setRefreshToken(new\r\n      CognitoRefreshToken(jsonDataObject.refresh_token));\r\n    } else {\r\n      this.signInUserSession.setRefreshToken(refreshToken);\r\n    }\r\n    this.cacheTokensScopes();\r\n    return this.userhandler.onSuccess(this.signInUserSession);\r\n  }\r\n\r\n  /**\r\n   * Launch Cognito Auth UI page.\r\n   * @param {string} URL the url to launch\r\n   * @returns {void}\r\n   */\r\n  launchUri(URL) {\r\n    window.open(URL);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} scopes string\r\n   */\r\n  getSpaceSeperatedScopeString() {\r\n    let tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\r\n    tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\r\n    return encodeURIComponent(tokenScopesString);\r\n  }\r\n\r\n  /**\r\n   * Create the FQDN(fully qualified domain name) for authorization endpoint.\r\n   * @returns {string} url\r\n   */\r\n  getFQDNSignIn() {\r\n    const state = this.generateRandomString(this.getCognitoConstants().STATELENGTH,\r\n    this.getCognitoConstants().STATEORIGINSTRING);\r\n    const tokenScopesString = this.getSpaceSeperatedScopeString();\r\n    // Build the complete web domain to launch the login screen\r\n    const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n    this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n    this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN,\r\n    this.getCognitoConstants().QUESTIONMARK,\r\n    this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI,\r\n    this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn),\r\n    this.getCognitoConstants().AMPERSAND,\r\n    this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE,\r\n    this.getCognitoConstants().EQUALSIGN,\r\n    this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID,\r\n    this.getCognitoConstants().EQUALSIGN, this.getClientId(),\r\n    this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE,\r\n    this.getCognitoConstants().EQUALSIGN, state, this.getCognitoConstants().AMPERSAND,\r\n    this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString);\r\n    return uri;\r\n  }\r\n\r\n  /**\r\n   * Sign out the user.\r\n   * @returns {void}\r\n   */\r\n  signOut() {\r\n    const URL = this.getFQDNSignOut();\r\n    this.clearCachedTokensScopes();\r\n    this.launchUri(URL);\r\n\tthis.signInUserSession = new CognitoAuthSession();\r\n  }\r\n\r\n  /**\r\n   * Create the FQDN(fully qualified domain name) for signout endpoint.\r\n   * @returns {string} url\r\n   */\r\n  getFQDNSignOut() {\r\n    const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\r\n    this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\r\n    this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT,\r\n    this.getCognitoConstants().QUESTIONMARK,\r\n    this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI,\r\n    this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut),\r\n    this.getCognitoConstants().AMPERSAND,\r\n    this.getCognitoConstants().CLIENT_ID,\r\n    this.getCognitoConstants().EQUALSIGN, this.getClientId());\r\n    return uri;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/CognitoAuth.js","/*!\r\n * Amazon Cognito Auth SDK for JavaScript\r\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *         http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file.\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\r\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nconst monthNames =\r\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n/** @class */\r\nexport default class DateHelper {\r\n  /**\r\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\r\n   */\r\n  getNowString() {\r\n    const now = new Date();\r\n\r\n    const weekDay = weekNames[now.getUTCDay()];\r\n    const month = monthNames[now.getUTCMonth()];\r\n    const day = now.getUTCDate();\r\n\r\n    let hours = now.getUTCHours();\r\n    if (hours < 10) {\r\n      hours = `0${hours}`;\r\n    }\r\n\r\n    let minutes = now.getUTCMinutes();\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    let seconds = now.getUTCSeconds();\r\n    if (seconds < 10) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    const year = now.getUTCFullYear();\r\n\r\n    // ddd MMM D HH:mm:ss UTC YYYY\r\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\r\n\r\n    return dateNow;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./e:/code-source/amazon-cognito-auth-js/src/DateHelper.js"],"sourceRoot":""}